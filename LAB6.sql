-- BÀI 1.1
CREATE TRIGGER Check_Luong_NV ON NHANVIEN FOR INSERT AS
IF (SELECT LUONG  FROM inserted) > 15000
BEGIN
PRINT'LUONG LON HON 15000'
ROLLBACK TRANSACTION 
END
-- 1.2
CREATE TRIGGER Check_Tuoi_NV ON NHANVIEN FOR INSERT AS
IF (SELECT (YEAR(GETDATE())-YEAR(NGSINH)) FROM inserted) <= 65 AND (SELECT (YEAR(GETDATE())-YEAR(NGSINH)) FROM inserted) >= 18
BEGIN
PRINT N'ĐỘ TUỔI PHẢI NẰM TRONG KHOẢNG 18<= TUỔI =>65'
ROLLBACK TRANSACTION
END
--1.3
CREATE TRIGGER Check_DCHI_NV ON NHANVIEN FOR UPDATE AS
IF  N'% TP HCM' IN (SELECT DCHI FROM inserted)
BEGIN
PRINT N'KHÔNG ĐƯỢC CẬP NHẬT NHỮNG NHÂN VIÊN Ở TP HCM'
ROLLBACK TRANSACTION 
END	
--2.1
CREATE TRIGGER checksum_namnuN_V ON NHANVIEN AFTER INSERT AS
BEGIN
DECLARE @SUM_NAM INT, @SUM_NU INT;
SET @SUM_NAM = (SELECT PHAI FROM NHANVIEN WHERE PHAI LIKE N'NAM')
SET @SUM_NU = (SELECT PHAI FROM NHANVIEN WHERE PHAI LIKE N'NỮ');
SELECT @SUM_NAM = COUNT(*) FROM inserted
SELECT @SUM_NU = COUNT(*) FROM inserted
PRINT N'TỔNG NHÂN VIÊN NAM' + @SUM_NAM
PRINT N'TỔNG NHÂN VIÊN NỮ' +@SUM_NU
END
--2.2
CREATE TRIGGER checkSumUpdate_Phainamnu_NV ON NHANVIEN AFTER UPDATE AS
BEGIN
DECLARE @SUM_NAM INT, @SUM_NU INT;
SET @SUM_NAM = (SELECT PHAI FROM NHANVIEN WHERE PHAI LIKE N'NAM')
SET @SUM_NU = (SELECT PHAI FROM NHANVIEN WHERE PHAI LIKE N'NỮ');
SELECT @SUM_NAM = COUNT(*) FROM inserted
SELECT @SUM_NU = COUNT(*) FROM inserted
PRINT N'TỔNG NHÂN VIÊN NAM' + @SUM_NAM
PRINT N'TỔNG NHÂN VIÊN NỮ' +@SUM_NU
END
--2.3
CREATE TRIGGER checkSLDA_NV ON DEAN AFTER DELETE AS
BEGIN
DECLARE @SLDEAN INT;
SET @SLDEAN = (SELECT COUNT(*) FROM DEAN, NHANVIEN WHERE DEAN.PHONG = NHANVIEN.PHG)
SELECT @SLDEAN = COUNT(*) FROM deleted
PRINT N'TỔNG SỐ LƯỢNG ĐỀ ÁN MÀ NHÂN VIÊN ĐÃ LÀM LÀ' + @SLDEAN
END
--3.1
CREATE TRIGGER XOATHANNHAN_NV ON NHANVIEN INSTEAD OF DELETE AS
BEGIN
DELETE FROM THANNHAN WHERE MA_NVIEN IN (SELECT MANV FROM deleted)
DELETE FROM NHANVIEN WHERE MANV IN (SELECT MANV FROM deleted)
END